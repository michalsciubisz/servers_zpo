@startuml
class Product {
+ __init__(self, name: str, price: float):
+ name: str
+ price: float
+ __eq__(self, other):
+ __hash__(self):
}

abstract class Server {
+ __init__(self, *args, **kwargs):
+ get_entries(self, n_letters):
# get_all_products(n_letters: int): â€‹
}

class Client {
+ __init__(self, server: Server)
+ server: Server
+ get_entries(self, n_letters):
+ get_total_price(self, n_letters: Optional[int]): Optional[float]
}

class TooManyProductsFoundError {

}

class MapServer {
+ __init__(self):
# get_all_products(n_letters: int = 1): Dict
+ get_entries(self, n_letters):
}

class ListServer {
+ __init__(self):
+ get_entries(self, n_letters):
# get_all_products(n_letters: int = 1): List
}

TooManyProductsFoundError <.. Server : <<throws>>
Client o-- Server
Server <|-- MapServer
Server <|-- ListServer
MapServer "1" *-- "*" Product
ListServer "1" *-- "*" Product
@enduml