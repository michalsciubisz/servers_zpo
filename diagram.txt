@startuml
class Product {
+ __init__(self, name: str, price: float):
+ name: str
+ price: float
+ __eq__(self, other):
+ __hash__(self):
}

abstract class Server {
+ n_max_returned_entries: int
+ __init__(self, *args, **kwargs):
+ get_entries(self, n_letters: int = 1):
# get_all_products(self, n_letters: int = 1): â€‹
}

class Client {
+ __init__(self, server: Server)
+ get_total_price(self, n_letters: Optional[int]): Optional[float]
}

class TooManyProductsFoundError {
- __str__(self):
}

class MapServer {
+ __init__(self, products: List[Product]):
# get_all_products(n_letters: int = 1):
}

class ListServer {
+ __init__(self, products: List[Product]):
# get_all_products(n_letters: int = 1):
}

TooManyProductsFoundError <.. Server : <<throws>>
Client o-- Server
Server <|-- MapServer
Server <|-- ListServer
MapServer "1" *-- "*" Product
ListServer "1" *-- "*" Product
@enduml